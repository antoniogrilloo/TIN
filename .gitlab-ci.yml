# File .gitlab-ci.yml
image: maven:3.8.6-openjdk-18-slim

stages:
  - build
  - validate
  - test
  - docs
  - deploy

services:
  - name: mysql:8.0
    alias: mysql
    command:
      - --default-authentication-plugin=mysql_native_password

variables:
  MYSQL_ROOT_PASSWORD: Grillo_00
  MYSQL_DATABASE: db_tin
  MYSQL_USER: springuser
  MYSQL_PASSWORD: Grillo_00
  MYSQL_HOST: mysql
  MYSQL_PORT: 3306
  SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/db_tin
  SPRING_DATASOURCE_USERNAME: springuser
  SPRING_DATASOURCE_PASSWORD: Grillo_00

before_script:
  - apt-get update && apt-get install -y default-mysql-client
  - echo "Waiting for MySQL to be ready..."
  - until mysql -h "$MYSQL_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "SHOW DATABASES;"; do echo "waiting for mysql"; sleep 1; done
  - mysql -h "$MYSQL_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE;"
  - mysql -h "$MYSQL_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "CREATE USER IF NOT EXISTS '$MYSQL_USER'@'%' IDENTIFIED BY '$MYSQL_PASSWORD';"
  - mysql -h "$MYSQL_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "GRANT ALL PRIVILEGES ON $MYSQL_DATABASE.* TO '$MYSQL_USER'@'%';"
  - mysql -h "$MYSQL_HOST" -u root -p"$MYSQL_ROOT_PASSWORD" -e "FLUSH PRIVILEGES;"

build:
  stage: build
  script:
    - mvn compile

validate:
  stage: validate
  script:
    - mvn validate
  #rules:
   # - if: '$CI_COMMIT_BRANCH =~ /^(Story|Task).*/'

test:
  stage: test
  script:
    - mvn test
    #- mvn javadoc:javadoc # Inserire istruzione per gen doc
 # rules:
 #   - if: '$CI_COMMIT_BRANCH =~ /^(Story|Task).*/ && $CI_COMMIT_REF_NAME =~ /^Sprint.*/'
  #  - if: '$CI_COMMIT_BRANCH == "main" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^Sprint.*/'

deploy:
  stage: deploy
  script:
    - mvn deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^Sprint.*/'

generate-swagger-docs:
  stage: docs
  image: openjdk:11
  script:
    - git clone a.grillo22/tin.git
    - wget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/5.1.0/openapi-generator-cli-5.1.0.jar -O openapi-generator-cli.jar
    - cd tin
    - ./gradlew bootRun &
    - sleep 30  # Tempo per avviare l'applicazione Spring Boot
    - curl -o swagger.json http://localhost:8080/v3/api-docs
    - java -jar openapi-generator-cli.jar generate -i swagger.json -g html -o ./swagger-html
  artifacts:
    paths:
      - swagger-html

update-wiki:
  stage: docs
  image: alpine:latest
  script:
    - apk add git
    - git config --global user.email "a.grillo22@campus.unimib.it"
    - git config --global user.name "a.grillo22"
    - git clone https://oauth2:$GITLAB_PRIVATE_TOKEN@gitlab.com/a.grillo22/tin.wiki.git
    - cp -r swagger-html/* tin.wiki/
    - cd tin.wiki
    - git add .
    - git commit -m "Aggiorna documentazione Swagger"
    - git push origin master
  only:
    - main
  dependencies:
    - generate-swagger-docs
